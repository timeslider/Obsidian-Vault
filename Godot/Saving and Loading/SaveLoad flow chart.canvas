{
	"nodes":[
		{"id":"aa7383e3da0f2618","type":"text","text":"# saver_loader.gd\n---\n```gdscript\nclass_name SaverLoader\nextends Node\n\n\nfunc save_game() -> void:\n\tvar saved_game: SavedGame = SavedGame.new()\n\tsaved_game.player_health = player.health\n\tsaved_game.player_position = player.global_position\n\n\tvar saved_data: Array[SavedData] = []\n\tget_tree().call_group(group_name, \"on_save_game\", saved_data)\n\tsaved_game.saved_data = saved_data\n\n\tResourceSaver.save(saved_game, \"user://save_game.tres\")\n\n\nfunc load_game():\n\tvar saved_game: SavedGame = load(\"user://save_game.tres\") as SavedGame\n\n\tplayer.global_position = saved_game.player_position\n\tplayer.health = saved_game.player_health\n\n\tget_tree().call_group(group_name, \"on_before_load_game\")\n\tfor item in saved_game.saved_data:\n\t\tvar scene = load(item.scene_path) as PackedScene\n\t\tvar restored_node = scene.instantiate()\n\t\tget_tree().add_child(restored_node)\n\n\t\t# Another contract with entity\n\t\tif restored_node.has_method(\"on_load_game\"):\n\t\t\trestored_node.on_load_game(item)\n```\n\ngroup_name will be the name you defined on entity.gd\n[call_group](https://docs.godotengine.org/en/stable/classes/class_node.html#class-node-method-get-tree)","x":-220,"y":560,"width":840,"height":900},
		{"id":"3c13a3f014bc89c8","type":"text","text":"# saved_torpedo_data\n---\n```gdscript\nclass_name SavedTorpedoData\n\n# Since the saver loader script can only use SavedData, we extend it and then modify\nextends SavedData\n\n@export var direction: Vector2\n\n```","x":1160,"y":-480,"width":800,"height":460},
		{"id":"e64a00667bb0b228","type":"text","text":"# projectile.gd\n---\n```gdscript\nvar direction: Vector2 = Vector2.ONE\nvar _dying: bool = false\n\n# This is a contract\nfunc on_save_game(Array[SavedData]\n\tif _dying == true:\n\t\treturn\n\t\n\tvar my_data = SavedTorpedoData.new()\n\tmy_data.position = global_position\n\t# scene_file_path is a built-in string that is the name of the current scene of self.\n\tmy_data.scene_path = scene_file_path\n\tmy_data.direction = direction\n\tsaved_data.append(my_data)\n\n\n# This is another contract. Stuff to do before loading. For example, remove self\nfunc on_before_load_game():\n\tget_parent().remove_child(self)\n\tqueue_free()\n\n# Another contract\nfunc on_load_game(saved_data: SavedData):\n\tvar my_data: SavedTorpedoData = saved_data as SavedTorpedoData\n\t\n\tglobal_position = saved_data.position\n\tdirection = my_data.direction\n```\n\nThis is an example of extending the base functionality and letting us save something unique to this node.","x":1160,"y":120,"width":1080,"height":860},
		{"id":"f7967200b23fbfc7","type":"file","file":"Images/2.png","x":2340,"y":120,"width":400,"height":300,"color":"#004cff"},
		{"id":"1f100569d0ec0431","type":"text","text":"# Mimi\n\n","x":2340,"y":40,"width":160,"height":80,"color":"#004cff"},
		{"id":"8d887cb444901f34","type":"text","text":"# saved_game.gd\n---\n```gdscript\nclass_name SavedGame\nextends Resource\n\n@export var player_position: Vector2\n@export var player_health: float\n@export var saved_data: Array[SavedData] = []\n\n```","x":-1360,"y":820,"width":660,"height":380},
		{"id":"2332d6dff0ac0d8c","type":"text","text":"# entity.gd\n---\nvariables...\n```gdscript\n# This is a contract\nfunc on_save_game(saved_data: Array[SavedData])\n\tif shouldnt_be_saved == true:\n\t\treturn\n\tvar my_data = SavedData.new()\n\tmy_data.position = global_position\n\t# scene_file_path is a built-in string that is the name of the current scene of self.\n\tmy_data.scene_path = scene_file_path\n\tsaved_data.append(my_data)\n\n# This is another contract. Stuff to do before loading. For example, delete itself\nfunc on_before_load_game():\n\tget_parent().remove_child(self)\n\tqueue_free()\n\n# Another contract\nfunc on_load_game(saved_data: SavedData):\n\tglobal_position = saved_data.position\n```\n\n## Notes\nAnything that saves must have these three contract functions: on_save_game(), on_before_load_game(), and on_load_game().\nAdd entity to a group. This group will be used to mark the entity for saving.\n","x":-160,"y":-440,"width":840,"height":740},
		{"id":"8cee596d0fd76882","type":"text","text":"# saved_data.gd\n---\n\n```gdscript\nclass_name SavedData\nextends Resource\n# This is the base resource for saving data.\n# Will need to figure out what is common amoung all entities. If nothing is common, that's fine. It can be used as a wrapper to extend other SavedData\n\n# Will always need a Vector2\n@export var position: Vector2\n\n# Will let us know which scene to instaniate\n# You can think of this as a unique identify for the object\n# In our case, we might use an int and increment for each new one.\n@export var scene_path: String\nvar id: int\n```\n","x":-1120,"y":-440,"width":660,"height":560}
	],
	"edges":[
		{"id":"93a189a354c4e36c","fromNode":"8d887cb444901f34","fromSide":"right","toNode":"aa7383e3da0f2618","toSide":"left"},
		{"id":"99b0a5c9d96aefea","fromNode":"8cee596d0fd76882","fromSide":"bottom","toNode":"aa7383e3da0f2618","toSide":"top"},
		{"id":"0a4f5200783b54e3","fromNode":"aa7383e3da0f2618","fromSide":"top","toNode":"2332d6dff0ac0d8c","toSide":"bottom"},
		{"id":"8fd3e9a458eaac76","fromNode":"e64a00667bb0b228","fromSide":"left","toNode":"aa7383e3da0f2618","toSide":"right"},
		{"id":"8c2d8efc5d7e3b06","fromNode":"3c13a3f014bc89c8","fromSide":"bottom","toNode":"e64a00667bb0b228","toSide":"top"},
		{"id":"6f039e54ee0b97dd","fromNode":"8cee596d0fd76882","fromSide":"right","toNode":"2332d6dff0ac0d8c","toSide":"left","label":"var my_data = SavedData.new()"}
	]
}